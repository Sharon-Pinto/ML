Use data set available: "Wholesale customers Data Set" which is taken from the UCI Machine Learning Repository (https://archive.ics.uci.edu/ml/datasets/Wholesale+customers)
The dataset consists of the following fields:
Channel: This field represents the type of customer, either 'Hotel/Restaurant/Cafe' (HORECA) or 'Retail' customers.
Region: This field represents the region where the customer is located.
Fresh: This field denotes the annual spending on fresh products.
Milk: This field denotes the annual spending on milk products.
Grocery: This field denotes the annual spending on grocery products. Frozen: This field denotes the annual spending on frozen products.
Detergents_Paper: This field denotes the annual spending on detergents and paper products.
Delicatessen: This field denotes the annual spending on delicatessen products.

import pandas as pd
from sklearn import tree
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

# Load the dataset
data = pd.read_csv("https://archive.ics.uci.edu/ml/machine-learning-databases/00292/Wholesale%20customers%20data.csv")

# Split the dataset into features and target
X = data.drop(['Channel'], axis=1)
y = data['Channel']

# Split the dataset into training and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)

# Train decision tree models using ID3, C4.5 and C5.0 algorithms
clf1 = tree.DecisionTreeClassifier(criterion='entropy', splitter='best')
clf2 = tree.DecisionTreeClassifier(criterion='entropy', splitter='best', class_weight='balanced')
clf3 = tree.DecisionTreeClassifier(criterion='entropy', splitter='best', max_depth=3)

# fit the classifyer model
clf1.fit(X_train, y_train)
clf2.fit(X_train, y_train)
clf3.fit(X_train, y_train)

 

# Test the models on the test set
y_pred1 = clf1.predict(X_test)
y_pred2 = clf2.predict(X_test)
y_pred3 = clf3.predict(X_test)

# Print the accuracy of the models
print("Accuracy of ID3:", accuracy_score(y_test, y_pred1))
print("Accuracy of C4.5:", accuracy_score(y_test, y_pred2))
print("Accuracy of C5.0:", accuracy_score(y_test, y_pred3))
